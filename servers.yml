Parameters:
  EnvironmentName:
    Type: String
Resources:

  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow HTTP for load balancer
      SecurityGroupIngress: 
        - FromPort: 80
          ToPort: 80
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress: 
        - FromPort: 80
          ToPort: 80
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
        - FromPort: 8080
          ToPort: 8080
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
  
  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow HTTP and SSH for servers
      SecurityGroupIngress: 
        - FromPort: 8080
          ToPort: 8080
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
        - FromPort: 22
          ToPort: 22
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress: 
        - FromPort: 0
          ToPort: 65535
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
  
  LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties: 
      BlockDeviceMappings: 
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'
      ImageId: ami-09e67e426f25ce0d7
      KeyName: server
      InstanceType: t3.micro
      SecurityGroups: 
        - Ref: ServerSecurityGroup
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          # Install docker
          apt-get update
          apt-get install -y apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          add-apt-repository \
          "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) \
          stable"
          apt-get update
          apt-get install -y docker-ce
          usermod -aG docker ubuntu
          docker run -p 8080:8080 tomcat:8.0
  
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: 
        Ref: LaunchConfiguration
      MinSize: '3'
      MaxSize: '6'
      TargetGroupARNs: 
        - Ref: TargetGroup
      VPCZoneIdentifier: 
        - Fn::ImportValue: !Sub "${EnvironmentName}-PRIV-NETS"
  
  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      SecurityGroups: 
        - Ref: LoadBalancerSecurityGroup
      Subnets: 
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: 
        Ref: LoadBalancer
      Port: '80'
      Protocol: HTTP

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties: 
      Actions: 
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref Listener
      Priority: 1
  
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties: 
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 8080
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
